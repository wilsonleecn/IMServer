{
  "name": "pcap-parser",
  "description": "Packet capture (PCAP) parser for node",
  "author": {
    "name": "Jeff Kunkle",
    "email": "jeff.kunkle@nearinfinity.com"
  },
  "keywords": [
    "pcap",
    "parser"
  ],
  "version": "0.2.1",
  "engines": {
    "node": ">=0.6.0"
  },
  "maintainers": [
    {
      "name": "Jeff Kunkle",
      "email": "jeff.kunkle@nearinfinity.com"
    },
    {
      "name": "Joe Ferner",
      "email": "joe.ferner@nearinfinity.com"
    }
  ],
  "bugs": {
    "url": "https://github.com/nearinfinity/node-pcap-parser/issues"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nearinfinity/node-pcap-parser.git"
  },
  "devDependencies": {
    "vows": "~0.5.13"
  },
  "scripts": {
    "test": "vows"
  },
  "main": "./lib/pcap-parser.js",
  "readme": "# pcap-parser\n\nPacket capture (pcap) file parser for Node.js\n\n## Installation\n\n    $ npm install pcap-parser\n\n## Usage\n\n```javascript\nvar pcapp = require('pcap-parser');\n\nvar parser = pcapp.parse('/path/to/file.pcap');\nparser.on('packet', function(packet) {\n  // do your packet processing\n});\n```\n\n## Events\n\npcap-parser emits five different events, only some of which you'll\nlikely care about. Each event is emitted from the parser created with\n`pcapp.parse`. The `pcapp.parse` method can be passed a\nfile path or a readable stream.\n\npcap-parser only parses version 2.4 of the libpcap file format in big\nor little endian format. Please see\nhttp://wiki.wireshark.org/Development/LibpcapFileFormat for detailed\ndocumentation of the pcap file format.\n\n### globalHeader\n\nEvent fired after parsing the global pcap file header. The object passed\nto your event listener would look something like\n\n    {\n      magicNumber: 2712847316,\n      majorVersion: 2,\n      minorVersion: 4,\n      gmtOffset: 0,\n      timestampAccuracy: 4,\n      snapshotLength: 65535,\n      linkLayerType: 1\n    }\n\n### packetHeader\n\nEvent fired after parsing each packet header. The object passed to your\nevent listener would look something like\n\n    {\n      timestampSeconds: 1254722767,\n      timestampMicroseconds: 492060,\n      capturedLength: 76,\n      originalLength: 76\n    }\n\n### packetData\n\nEvent fired after parsing each packet's data. The argument passed to the\nevent listener is simply a buffer containing the packet data.\n\n### packet\n\nEvent fired after parsing each packet. The data structure contains both\nthe header fields and packet data.\n\n    {\n      header: {\n        timestampSeconds: 1254722767,\n        timestampMicroseconds: 492060,\n        capturedLength: 76,\n        originalLength: 76\n      },\n\n      data: [Buffer]\n    }\n\n### end\n\nEmitted after all packes in the file or stream have been parsed. There\nare no arguments passed to the event listener.\n\n### error\n\nEmitted on any error from the underlying stream. The error object is\npassed to the event listener.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Near Infinity Corporation\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "pcap-parser@0.2.1",
  "_from": "pcap-parser@^0.2.1"
}
