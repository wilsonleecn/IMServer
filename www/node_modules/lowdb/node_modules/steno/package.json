{
  "name": "steno",
  "version": "0.1.2",
  "description": "File writer",
  "main": "index.js",
  "scripts": {
    "test": "node test",
    "prepush": "npm test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/typicode/steno.git"
  },
  "keywords": [
    "file",
    "write",
    "writer",
    "asynchronous",
    "synchronous",
    "stenograph"
  ],
  "author": {
    "name": "typicode"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/typicode/steno/issues"
  },
  "homepage": "https://github.com/typicode/steno",
  "devDependencies": {
    "husky": "^0.6.1",
    "tape": "^3.0.1"
  },
  "readme": "# steno ![](http://img.shields.io/npm/v/steno.svg?style=flat) ![](http://img.shields.io/travis/typicode/steno.svg?style=flat)\n\n> Super fast non-blocking file writer for Node.\n\n```javascript\nvar steno = require('steno')\n\nfor (var i = 0; i < 10000; i++) {\n  steno('file.txt').write(i)\n}\n```\n\nThis code runs in `2ms` versus `~5500ms` with `fs.writeFileSync`.\n\n## API\n\n__steno(filename)__\n\nReturns writer for filename.\n\n__writer.write(data)__\n\nWrites data to file. If file is already being written, data is buffered until it can be written.\n\n__writer.setCallback(cb)__\n\nUse it to set a callback that will be executed between two writes. Useful for atomic writing, logging, delaying, ...\n\n```javascript\nsteno('tmp-file.txt').setCallback(function(data, next) {\n  console.log(data + ' has been written to ' + this.filename)\n  fs.rename('tmp-file.txt', 'file.txt', function(err) {\n    if (err) throw err\n    next() // next must be called\n  })\n})\n```\n",
  "readmeFilename": "README.md",
  "_id": "steno@0.1.2",
  "dist": {
    "shasum": "c3f040edf1e8dc5fa5dbda267bc6f325e5453ada"
  },
  "_from": "steno@^0.1.1",
  "_resolved": "https://registry.npmjs.org/steno/-/steno-0.1.2.tgz"
}
